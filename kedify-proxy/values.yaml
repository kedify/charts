image:
  # -- Image to use for the Deployment
  repository: envoyproxy/envoy
  # -- Image pull policy, consult [docs](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)
  pullPolicy: IfNotPresent
  # -- Image version to use for the Deployment, if not specified, it defaults to `.Chart.AppVersion`
  tag: ""

# -- Required for private image registries, consult [docs](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

logging:
  # -- Use: `plaintext` or `json`
  format: plaintext

config:
  nodeId: kedify-proxy
  # -- namespace where Kedify HTTP addon is deployed
  kedaNamespace: keda
  # CLUSTER_LOCAL_DOMAIN > ISTIO_CLUSTER_DOMAIN > cluster.local
  clusterDomain: cluster.local
  # -- service name of Kedify interceptor that serves as a control plane for configuration xDS and metrics
  kedifyEnvoyCP: keda-add-ons-http-interceptor-kedify-proxy-metric-sink
  # -- port on kedify interceptor (`.config.kedifyEnvoyCP` host) from which the xDS config should be pulled
  kedifyEnvoyCPPort: 5678
  # -- port on kedify interceptor (`.config.kedifyEnvoyCP` host) where metrics from envoy data planes will be sent
  kedifyMetricsSinkPort: 9901

pod:
  # -- custom annotations that should be added to the Kedify proxy pod
  annotations: {}
  # -- custom labels that should be added to the Kedify proxy pod
  labels: {}
  # -- pod-lvl securityContext [docs](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  securityContext: {}
  # -- container-lvl securityContext [docs](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  containerSecurityContext:
    runAsUser: 101
  # -- [docs](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/)
  priorityClassName: ""
  # -- custom timeouts and thresholds for liveness probe
  livenessProbe: {}
  # -- custom timeouts and thresholds for readiness probe
  readinessProbe: {}
    # periodSeconds: 30
    # initialDelaySeconds: 5
    # failureThreshold: 2

deployment:
  # -- Fixed amount of replicas for the deployment. Use either `.autoscaling` section or this field.
  replicas: 1
  # -- [docs](https://kubernetes.io/docs/tutorials/kubernetes-basics/update/update-intro/)
  rollingUpdate: {}
  # rollingUpdate:
  #   maxSurge: 25%
  #   maxUnavailable: 25%

service:
  # -- Should the services be rendered with the helm chart?
  enabled: true
  # -- Name of the service that exposes HTTP and TLS ports. If empty, release name is used.
  nameOverride: "kedify-proxy"
  # -- [docs](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types)
  type: ClusterIP
  # -- custom annotations that should be added to both services
  annotations: {}
  # -- custom labels that should be added to both services
  labels: {}
  # -- port for plain text HTTP traffic
  httpPort: 8080
  # -- port for TLS HTTP traffic
  tlsPort: 8443
  # -- Should the admin service be also rendered with the helm chart?
  exposeAdminInterface: true
  # -- Name of the service that exposes admin port for envoy. If empty, `${releaseName}-admin` is used.
  adminSvcNameOverride: "kedify-proxy-admin"
  # -- [docs](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types)
  adminSvcType: ClusterIP
  # -- port for admin interface of envoy
  adminPort: 9901

# -- resource definitions for envoy container, see [docs](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
resources: {}

# -- mutually exclusive with `.deployment.replicas`
autoscaling:
  # -- Should the KEDA's `ScaledObject` be also rendered with the helm chart?
  enabled: false
  # -- Name of the `ScaledObject` custom resource. If empty, release name is used.
  scaledObjectName: ""
  # see [docs](https://keda.sh/docs/latest/reference/scaledobject-spec/#minreplicacount)
  minReplicaCount: 1
  # see [docs](https://keda.sh/docs/latest/reference/scaledobject-spec/#maxreplicacount)
  maxReplicaCount: 3
  # see [docs](https://keda.sh/docs/latest/reference/scaledobject-spec/#horizontalpodautoscalerconfig)
  horizontalPodAutoscalerConfig: {}
  # horizontalPodAutoscalerConfig:
  #   behavior:
  #     scaleDown:
  #       stabilizationWindowSeconds: 10
  #     scaleUp:
  #       stabilizationWindowSeconds: 10

# -- Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- [details](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
nodeSelector: {}
# -- [details](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
tolerations: []
# -- [details](https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/)
topologySpreadConstraints: []
# -- [details](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity)
affinity: {}

# -- [details](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) (not rendered by default)
podDisruptionBudget:
  enabled: false
  spec: {}
  # spec:
  #   # mutually exclusive with minAvailable
  #   maxUnavailable: 1
  #   # mutually exclusive with maxUnavailable
  #   minAvailable: 1
  #   unhealthyPodEvictionPolicy: IfHealthyBudget

# -- should the ascii logo be printed when this helm chart is installed
noBanner: false

# -- Array of extra K8s manifests to deploy
extraObjects: []
  # - apiVersion: "cilium.io/v2"
  #   kind: CiliumNetworkPolicy
  #   metadata:
  #     name: "kedify-proxy-netpol"
  #   spec:
  #     endpointSelector:
  #       matchLabels:
  #         app: kedify-proxy
  #     egress:
  #       - toPorts:
  #         - ports:
  #           - port: "8080"
  #             protocol: TCP
